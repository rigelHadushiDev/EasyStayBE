package com.example.EasyStay.controller;


import com.example.EasyStay.dtos.LoginUserDto;
import com.example.EasyStay.dtos.RefreshTokenRequest;
import com.example.EasyStay.dtos.UserDto;
import com.example.EasyStay.entities.UserEntity;
import com.example.EasyStay.mappers.Mapper;
import com.example.EasyStay.responses.LogInResponse;
import com.example.EasyStay.service.AuthenticationService;
import com.example.EasyStay.validation.OnSignUpUser;
import jakarta.validation.Valid;
import lombok.RequiredArgsConstructor;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;

@RequestMapping("/auth")
@RestController
@RequiredArgsConstructor
public class AuthenticationController {

    private final AuthenticationService authenticationService;
    private final Mapper<UserEntity, UserDto> userMapper;

    @PostMapping("/signup")
    public ResponseEntity<?> signup(@Validated(OnSignUpUser.class) @RequestBody UserDto userDto) {
        UserEntity userEntity = userMapper.mapFrom(userDto);
        UserEntity registeredUser = authenticationService.signup(userEntity);
        return new ResponseEntity<>( userMapper.mapTo(registeredUser), HttpStatus.OK);
    }

    @PostMapping("/login")
    public ResponseEntity<LogInResponse> authenticate(@Valid @RequestBody LoginUserDto loginUserDto) {
        LogInResponse response = authenticationService.authenticate(loginUserDto);
        return ResponseEntity.ok(response);
    }

    @PostMapping("/resend")
    public ResponseEntity<?> resendAutoGeneratedPassword(@RequestParam String username) {
        authenticationService.resendAutoGeneratedPassword(username);
        return ResponseEntity.ok("Temporary password sent");
    }

    @PostMapping("/refresh")
    public ResponseEntity<LogInResponse> refreshAccessToken(@Valid @RequestBody RefreshTokenRequest refreshTokenRequest) {
        String refreshToken = refreshTokenRequest.getRefreshToken();
        LogInResponse response = authenticationService.refreshAccessToken(refreshToken);
        return ResponseEntity.ok(response);
    }

}